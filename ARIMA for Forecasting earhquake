%ARIMA for Forecasting earhquake
A = xlsread('data.xlsx', 'sheet1');
y = A(:,2);
t = A(:,1);
% y=observation values
% t= time of events
% Start ARIMA(1,1,1) section
title('Data points')
Mdl = arima(1,1,1);
EstMdl = estimate(Mdl,y);
res = infer(EstMdl,y);
% F2= predicted values from ARIMA method
F2=res;
%Starat MLR section (Combinition ARIMA and MLR)
% outputs of ARIMA imported as input in MLR method
F=@(x,t)x(2)*F2(t)+x(3)
x0 = ones(3,1);
[x,resnorm,~,exitflag,output] = lsqcurvefit(F,x0,t,y)
F3=x(2)*F2(t)+x(3);
%F3= predicted method from MLR
%F3= final predicted values in Model combination ARIMA and MLR
% output from ARIMA method is imported as input data in MLR
hold on
plot(y,F3,'ro')
hold off
F12 = F3(1:6188,:);
y12 = y(1:6188,:);
r12=corr2(F12,y12)
R12=r12^2
m12=sqrt(sum((y12(:)-F12(:)).^2)/numel(F12))
b12=max(F12);
a12=min(F12);
n12=m12/(b12-a12)
fb12=(sum(F12(:)-y12(:)))/(2*numel(F12)*(sum(F12(:)+y12(:))))
F16 = F3(6188:9016,:);
y16 = y(6188:9016,:);
r16=corr2(F16,y16)
R16=r16^2
m16=sqrt(sum((y16(:)-F16(:)).^2)/numel(F16))
b16=max(F16);
a16=min(F16);
n16=m16/(b16-a16)
fb16=(sum(F16(:)-y16(:)))/(2*numel(F16)*(sum(F16(:)+y16(:))))
% table1= Correlation Coefficient, RMSE, NMSE and Fractional bias
%R12= correlation coefficient in traning section
%R16= correlation coefficient in forecasting section
%m12= RMSE in training section
%m16= RMSE in forecasting section
%n12= NMSE in training section
%n16= NMSE in forecasting section
%fb12= fractional bias in training section
%fb16= fractional bias in forecasting section
table1=[R12,m12,n12,fb12,R16,m16,n16,fb16]
%table2= time, observation values, predicted values
table2=[[t],[y],[F3]];
