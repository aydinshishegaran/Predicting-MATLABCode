%MLR code for forecasting earthquake information
A = xlsread('MLR.xlsx', 'sheet1');
y = A(:,2);
t = A(:,1);
a1= A(:,3); a2= A(:,4); a3= A(:,5); a4=A(:,6); 
% y=observation values (actual values)
% t= time of events
% a1= previous data of events a2= second previous data of events
% a3= third previous data of events a4= 4th previous data of events
F=@(x,t)x(1)*a1(t)+x(2)*a2(t)+x(3)*a3(t)+x(4)*a4(t)+x(5);
x0 = ones(9,1);
[x,resnorm,~,exitflag,output] = lsqcurvefit(F,x0,t,y)
hold on
plot(y,F(x,t),'ro')
hold off
F1=x(1)*a1(t)+x(2)*a2(t)+x(3)*a3(t)+x(4)*a4(t)+x(5);
% F1=predicted values
F12 = F1(1:6188,:);
y12 = y(1:6188,:);
r12=corr2(F12,y12)
R12=r12^2
m12=sqrt(sum((y12(:)-F12(:)).^2)/numel(F12))
b12=max(F12);
a12=min(F12);
n12=m12/(b12-a12)
fb12=(sum(F12(:)-y12(:)))/(2*numel(F12)*(sum(F12(:)+y12(:))))
F16 = F2(6188:9012,:);
y16 = y(6188:9012,:);
r16=corr2(F16,y16)
R16=r16^2
m16=sqrt(sum((y16(:)-F16(:)).^2)/numel(F16))
b16=max(F16);
a16=min(F16);
n16=m16/(b16-a16)
fb16=(sum(F16(:)-y16(:)))/(2*numel(F16)*(sum(F16(:)+y16(:))))
% Table1= Correlation Coefficient, RMSE, NMSE and Fractional bias
%R12= correlation coefficient in traning section
%R16= correlation coefficient in forecasting section
%m12= RMSE in training section
%m16= RMSE in forecasting section
%n12= NMSE in training section
%n16= NMSE in forecasting section
%fb12= fractional bias in training section
%fb16= fractional bias in forecasting section
table1=[R12,m12,n12,fb12,R16,m16,n16,fb16]
%table2= time, observation values, predicted values
table2=[[t],[y],[F1]];
